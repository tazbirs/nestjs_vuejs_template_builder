{"ast":null,"code":"import { ref, onMounted, computed } from 'vue';\nimport { useStore } from 'vuex';\nimport { ElMessage } from 'element-plus';\nexport default {\n  name: 'FormList',\n  setup() {\n    const store = useStore();\n    const dialogVisible = ref(false);\n    const formToDelete = ref(null);\n    const forms = computed(() => store.getters.forms);\n    const loading = computed(() => store.getters.isLoading);\n    onMounted(async () => {\n      await store.dispatch('fetchForms');\n    });\n    const confirmDelete = form => {\n      formToDelete.value = form;\n      dialogVisible.value = true;\n    };\n    const deleteForm = async () => {\n      try {\n        await store.dispatch('deleteForm', formToDelete.value._id);\n        ElMessage({\n          message: `Form \"${formToDelete.value.name}\" deleted successfully`,\n          type: 'success'\n        });\n        dialogVisible.value = false;\n        formToDelete.value = null;\n      } catch (error) {\n        ElMessage.error('Failed to delete form');\n      }\n    };\n    return {\n      forms,\n      loading,\n      dialogVisible,\n      formToDelete,\n      confirmDelete,\n      deleteForm\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","useStore","ElMessage","name","setup","store","dialogVisible","formToDelete","forms","getters","loading","isLoading","dispatch","confirmDelete","form","value","deleteForm","_id","message","type","error"],"sources":["/Users/mdtazbirurrahmanbhuiyan/Experiments/VueJS template buillder/VueJS-template-builder/frontend/src/views/forms/FormList.vue"],"sourcesContent":["<template>\n  <div class=\"form-list\">\n    <div class=\"page-header\">\n      <h1>Forms</h1>\n      <el-button type=\"primary\" @click=\"$router.push('/forms/new')\">\n        Create Form\n      </el-button>\n    </div>\n    \n    <el-card shadow=\"hover\" class=\"container\">\n      <el-table\n        v-loading=\"loading\"\n        :data=\"forms\"\n        style=\"width: 100%\"\n        empty-text=\"No forms found. Create your first form!\"\n      >\n        <el-table-column prop=\"name\" label=\"Name\" min-width=\"180\">\n          <template #default=\"{ row }\">\n            <router-link :to=\"`/forms/${row._id}`\">{{ row.name }}</router-link>\n          </template>\n        </el-table-column>\n        \n        <el-table-column prop=\"description\" label=\"Description\" min-width=\"250\" />\n        \n        <el-table-column label=\"Template\" width=\"180\">\n          <template #default=\"{ row }\">\n            <el-tag v-if=\"row.templateId\" size=\"small\" type=\"info\">\n              Based on template\n            </el-tag>\n            <span v-else>Custom form</span>\n          </template>\n        </el-table-column>\n        \n        <el-table-column label=\"Elements\" width=\"100\">\n          <template #default=\"{ row }\">\n            <el-tag size=\"small\">{{ row.elements?.length || 0 }} elements</el-tag>\n          </template>\n        </el-table-column>\n        \n        <el-table-column label=\"Status\" width=\"120\">\n          <template #default=\"{ row }\">\n            <el-tag :type=\"row.isPublished ? 'success' : 'info'\">\n              {{ row.isPublished ? 'Published' : 'Draft' }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        \n        <el-table-column label=\"Actions\" width=\"200\">\n          <template #default=\"{ row }\">\n            <el-button-group>\n              <el-button size=\"small\" @click=\"$router.push(`/forms/${row._id}`)\">\n                Edit\n              </el-button>\n              <el-button size=\"small\" type=\"primary\" @click=\"$router.push(`/forms/${row._id}/view`)\">\n                View\n              </el-button>\n              <el-button size=\"small\" type=\"danger\" @click=\"confirmDelete(row)\">\n                Delete\n              </el-button>\n            </el-button-group>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-card>\n    \n    <el-dialog\n      v-model=\"dialogVisible\"\n      title=\"Confirm Delete\"\n      width=\"30%\"\n    >\n      <span>Are you sure you want to delete the form \"{{ formToDelete?.name }}\"?</span>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"dialogVisible = false\">Cancel</el-button>\n          <el-button type=\"danger\" @click=\"deleteForm\">Delete</el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, computed } from 'vue'\nimport { useStore } from 'vuex'\nimport { ElMessage } from 'element-plus'\n\nexport default {\n  name: 'FormList',\n  \n  setup() {\n    const store = useStore()\n    const dialogVisible = ref(false)\n    const formToDelete = ref(null)\n    \n    const forms = computed(() => store.getters.forms)\n    const loading = computed(() => store.getters.isLoading)\n    \n    onMounted(async () => {\n      await store.dispatch('fetchForms')\n    })\n    \n    const confirmDelete = (form) => {\n      formToDelete.value = form\n      dialogVisible.value = true\n    }\n    \n    const deleteForm = async () => {\n      try {\n        await store.dispatch('deleteForm', formToDelete.value._id)\n        ElMessage({\n          message: `Form \"${formToDelete.value.name}\" deleted successfully`,\n          type: 'success'\n        })\n        dialogVisible.value = false\n        formToDelete.value = null\n      } catch (error) {\n        ElMessage.error('Failed to delete form')\n      }\n    }\n    \n    return {\n      forms,\n      loading,\n      dialogVisible,\n      formToDelete,\n      confirmDelete,\n      deleteForm\n    }\n  }\n}\n</script>\n\n<style scoped>\n.form-list {\n  max-width: 1200px;\n  margin: 0 auto;\n}\n</style>\n"],"mappings":"AAkFA,SAASA,GAAG,EAAEC,SAAS,EAAEC,QAAO,QAAS,KAAI;AAC7C,SAASC,QAAO,QAAS,MAAK;AAC9B,SAASC,SAAQ,QAAS,cAAa;AAEvC,eAAe;EACbC,IAAI,EAAE,UAAU;EAEhBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIJ,QAAQ,CAAC;IACvB,MAAMK,aAAY,GAAIR,GAAG,CAAC,KAAK;IAC/B,MAAMS,YAAW,GAAIT,GAAG,CAAC,IAAI;IAE7B,MAAMU,KAAI,GAAIR,QAAQ,CAAC,MAAMK,KAAK,CAACI,OAAO,CAACD,KAAK;IAChD,MAAME,OAAM,GAAIV,QAAQ,CAAC,MAAMK,KAAK,CAACI,OAAO,CAACE,SAAS;IAEtDZ,SAAS,CAAC,YAAY;MACpB,MAAMM,KAAK,CAACO,QAAQ,CAAC,YAAY;IACnC,CAAC;IAED,MAAMC,aAAY,GAAKC,IAAI,IAAK;MAC9BP,YAAY,CAACQ,KAAI,GAAID,IAAG;MACxBR,aAAa,CAACS,KAAI,GAAI,IAAG;IAC3B;IAEA,MAAMC,UAAS,GAAI,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMX,KAAK,CAACO,QAAQ,CAAC,YAAY,EAAEL,YAAY,CAACQ,KAAK,CAACE,GAAG;QACzDf,SAAS,CAAC;UACRgB,OAAO,EAAE,SAASX,YAAY,CAACQ,KAAK,CAACZ,IAAI,wBAAwB;UACjEgB,IAAI,EAAE;QACR,CAAC;QACDb,aAAa,CAACS,KAAI,GAAI,KAAI;QAC1BR,YAAY,CAACQ,KAAI,GAAI,IAAG;MAC1B,EAAE,OAAOK,KAAK,EAAE;QACdlB,SAAS,CAACkB,KAAK,CAAC,uBAAuB;MACzC;IACF;IAEA,OAAO;MACLZ,KAAK;MACLE,OAAO;MACPJ,aAAa;MACbC,YAAY;MACZM,aAAa;MACbG;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}