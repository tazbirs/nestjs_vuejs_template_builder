{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, createSlots as _createSlots } from \"vue\";\nconst _hoisted_1 = {\n  class: \"form-view\"\n};\nconst _hoisted_2 = {\n  class: \"page-header\"\n};\nconst _hoisted_3 = {\n  class: \"header-actions\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"loading-state\"\n};\nconst _hoisted_5 = {\n  class: \"form-info\"\n};\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = {\n  key: 13\n};\nconst _hoisted_8 = {\n  key: 15\n};\nconst _hoisted_9 = {\n  key: 1,\n  class: \"empty-form\"\n};\nconst _hoisted_10 = {\n  key: 2,\n  class: \"form-actions\"\n};\nconst _hoisted_11 = {\n  class: \"dialog-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_skeleton = _resolveComponent(\"el-skeleton\");\n  const _component_el_divider = _resolveComponent(\"el-divider\");\n  const _component_QuestionFilled = _resolveComponent(\"QuestionFilled\");\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_tooltip = _resolveComponent(\"el-tooltip\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_input_number = _resolveComponent(\"el-input-number\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_radio = _resolveComponent(\"el-radio\");\n  const _component_el_radio_group = _resolveComponent(\"el-radio-group\");\n  const _component_el_checkbox = _resolveComponent(\"el-checkbox\");\n  const _component_el_checkbox_group = _resolveComponent(\"el-checkbox-group\");\n  const _component_el_date_picker = _resolveComponent(\"el-date-picker\");\n  const _component_el_time_picker = _resolveComponent(\"el-time-picker\");\n  const _component_el_upload = _resolveComponent(\"el-upload\");\n  const _component_el_slider = _resolveComponent(\"el-slider\");\n  const _component_el_switch = _resolveComponent(\"el-switch\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_empty = _resolveComponent(\"el-empty\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h1\", null, \"Form: \" + _toDisplayString($setup.form?.name), 1), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_button, {\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$router.push('/forms'))\n  }, {\n    default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\"Back to Forms\")])),\n    _: 1,\n    __: [4]\n  }), _createVNode(_component_el_button, {\n    type: \"primary\",\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.$router.push(`/forms/${$props.id}`))\n  }, {\n    default: _withCtx(() => _cache[5] || (_cache[5] = [_createTextVNode(\"Edit Form\")])),\n    _: 1,\n    __: [5]\n  }), !$props.readonly ? (_openBlock(), _createBlock(_component_el_button, {\n    key: 0,\n    type: \"success\",\n    onClick: $setup.submitForm\n  }, {\n    default: _withCtx(() => _cache[6] || (_cache[6] = [_createTextVNode(\"Submit\")])),\n    _: 1,\n    __: [6]\n  }, 8, [\"onClick\"])) : _createCommentVNode(\"\", true)])]), _createVNode(_component_el_card, {\n    class: \"container form-container\"\n  }, {\n    default: _withCtx(() => [$setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode(_component_el_skeleton, {\n      rows: 6,\n      animated: \"\"\n    })])) : $setup.form ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 1\n    }, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"h2\", null, _toDisplayString($setup.form.name), 1), $setup.form.description ? (_openBlock(), _createElementBlock(\"p\", _hoisted_6, _toDisplayString($setup.form.description), 1)) : _createCommentVNode(\"\", true)]), _createVNode(_component_el_divider), _createVNode(_component_el_form, {\n      ref: \"formRef\",\n      model: $setup.formValues,\n      \"label-position\": \"top\",\n      disabled: $props.readonly\n    }, {\n      default: _withCtx(() => [$setup.form.elements && $setup.form.elements.length > 0 ? (_openBlock(true), _createElementBlock(_Fragment, {\n        key: 0\n      }, _renderList($setup.form.elements, (element, index) => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          key: element.id || index,\n          class: \"form-item-wrapper\"\n        }, [_createVNode(_component_el_form_item, {\n          label: element.label,\n          prop: element.name,\n          required: element.required\n        }, _createSlots({\n          default: _withCtx(() => [element.type === 'text' ? (_openBlock(), _createBlock(_component_el_input, {\n            key: 0,\n            modelValue: $setup.formValues[element.name],\n            \"onUpdate:modelValue\": $event => $setup.formValues[element.name] = $event,\n            placeholder: element.placeholder\n          }, null, 8, [\"modelValue\", \"onUpdate:modelValue\", \"placeholder\"])) : element.type === 'email' ? (_openBlock(), _createBlock(_component_el_input, {\n            key: 1,\n            modelValue: $setup.formValues[element.name],\n            \"onUpdate:modelValue\": $event => $setup.formValues[element.name] = $event,\n            placeholder: element.placeholder,\n            type: \"email\"\n          }, null, 8, [\"modelValue\", \"onUpdate:modelValue\", \"placeholder\"])) : element.type === 'password' ? (_openBlock(), _createBlock(_component_el_input, {\n            key: 2,\n            modelValue: $setup.formValues[element.name],\n            \"onUpdate:modelValue\": $event => $setup.formValues[element.name] = $event,\n            placeholder: element.placeholder,\n            type: \"password\",\n            \"show-password\": \"\"\n          }, null, 8, [\"modelValue\", \"onUpdate:modelValue\", \"placeholder\"])) : element.type === 'textarea' ? (_openBlock(), _createBlock(_component_el_input, {\n            key: 3,\n            modelValue: $setup.formValues[element.name],\n            \"onUpdate:modelValue\": $event => $setup.formValues[element.name] = $event,\n            type: \"textarea\",\n            rows: 3,\n            placeholder: element.placeholder\n          }, null, 8, [\"modelValue\", \"onUpdate:modelValue\", \"placeholder\"])) : element.type === 'number' ? (_openBlock(), _createBlock(_component_el_input_number, {\n            key: 4,\n            modelValue: $setup.formValues[element.name],\n            \"onUpdate:modelValue\": $event => $setup.formValues[element.name] = $event,\n            \"controls-position\": \"right\",\n            style: {\n              \"width\": \"100%\"\n            }\n          }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"])) : element.type === 'select' ? (_openBlock(), _createBlock(_component_el_select, {\n            key: 5,\n            modelValue: $setup.formValues[element.name],\n            \"onUpdate:modelValue\": $event => $setup.formValues[element.name] = $event,\n            placeholder: element.placeholder,\n            style: {\n              \"width\": \"100%\"\n            }\n          }, {\n            default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(element.options, option => {\n              return _openBlock(), _createBlock(_component_el_option, {\n                key: option.value,\n                label: option.label,\n                value: option.value\n              }, null, 8, [\"label\", \"value\"]);\n            }), 128))]),\n            _: 2\n          }, 1032, [\"modelValue\", \"onUpdate:modelValue\", \"placeholder\"])) : element.type === 'radio' ? (_openBlock(), _createBlock(_component_el_radio_group, {\n            key: 6,\n            modelValue: $setup.formValues[element.name],\n            \"onUpdate:modelValue\": $event => $setup.formValues[element.name] = $event\n          }, {\n            default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(element.options, option => {\n              return _openBlock(), _createBlock(_component_el_radio, {\n                key: option.value,\n                label: option.value\n              }, {\n                default: _withCtx(() => [_createTextVNode(_toDisplayString(option.label), 1)]),\n                _: 2\n              }, 1032, [\"label\"]);\n            }), 128))]),\n            _: 2\n          }, 1032, [\"modelValue\", \"onUpdate:modelValue\"])) : element.type === 'checkbox' ? (_openBlock(), _createBlock(_component_el_checkbox_group, {\n            key: 7,\n            modelValue: $setup.formValues[element.name],\n            \"onUpdate:modelValue\": $event => $setup.formValues[element.name] = $event\n          }, {\n            default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(element.options, option => {\n              return _openBlock(), _createBlock(_component_el_checkbox, {\n                key: option.value,\n                label: option.value\n              }, {\n                default: _withCtx(() => [_createTextVNode(_toDisplayString(option.label), 1)]),\n                _: 2\n              }, 1032, [\"label\"]);\n            }), 128))]),\n            _: 2\n          }, 1032, [\"modelValue\", \"onUpdate:modelValue\"])) : element.type === 'date' ? (_openBlock(), _createBlock(_component_el_date_picker, {\n            key: 8,\n            modelValue: $setup.formValues[element.name],\n            \"onUpdate:modelValue\": $event => $setup.formValues[element.name] = $event,\n            type: \"date\",\n            placeholder: element.placeholder || 'Select date',\n            style: {\n              \"width\": \"100%\"\n            }\n          }, null, 8, [\"modelValue\", \"onUpdate:modelValue\", \"placeholder\"])) : element.type === 'time' ? (_openBlock(), _createBlock(_component_el_time_picker, {\n            key: 9,\n            modelValue: $setup.formValues[element.name],\n            \"onUpdate:modelValue\": $event => $setup.formValues[element.name] = $event,\n            placeholder: element.placeholder || 'Select time',\n            style: {\n              \"width\": \"100%\"\n            }\n          }, null, 8, [\"modelValue\", \"onUpdate:modelValue\", \"placeholder\"])) : element.type === 'file' ? (_openBlock(), _createBlock(_component_el_upload, {\n            key: 10,\n            action: \"#\",\n            \"auto-upload\": false,\n            \"file-list\": $setup.formValues[element.name],\n            \"onUpdate:fileList\": $event => $setup.formValues[element.name] = $event\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_button, {\n              type: \"primary\"\n            }, {\n              default: _withCtx(() => _cache[7] || (_cache[7] = [_createTextVNode(\"Click to upload\")])),\n              _: 1,\n              __: [7]\n            })]),\n            _: 2\n          }, 1032, [\"file-list\", \"onUpdate:fileList\"])) : element.type === 'slider' ? (_openBlock(), _createBlock(_component_el_slider, {\n            key: 11,\n            modelValue: $setup.formValues[element.name],\n            \"onUpdate:modelValue\": $event => $setup.formValues[element.name] = $event\n          }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"])) : element.type === 'switch' ? (_openBlock(), _createBlock(_component_el_switch, {\n            key: 12,\n            modelValue: $setup.formValues[element.name],\n            \"onUpdate:modelValue\": $event => $setup.formValues[element.name] = $event\n          }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"])) : element.type === 'heading' ? (_openBlock(), _createElementBlock(\"h4\", _hoisted_7, _toDisplayString(element.label), 1)) : element.type === 'divider' ? (_openBlock(), _createBlock(_component_el_divider, {\n            key: 14\n          })) : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, _toDisplayString(element.type) + \" element\", 1))]),\n          _: 2\n        }, [element.helperText ? {\n          name: \"label\",\n          fn: _withCtx(() => [_createElementVNode(\"div\", null, [_createTextVNode(_toDisplayString(element.label) + \" \", 1), _createVNode(_component_el_tooltip, {\n            content: element.helperText,\n            placement: \"top\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n              default: _withCtx(() => [_createVNode(_component_QuestionFilled)]),\n              _: 1\n            })]),\n            _: 2\n          }, 1032, [\"content\"])])]),\n          key: \"0\"\n        } : undefined]), 1032, [\"label\", \"prop\", \"required\"])]);\n      }), 128)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_createVNode(_component_el_empty, {\n        description: \"This form has no elements\"\n      })])), $setup.form.elements?.length && !$props.readonly ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $setup.submitForm\n      }, {\n        default: _withCtx(() => _cache[8] || (_cache[8] = [_createTextVNode(\"Submit Form\")])),\n        _: 1,\n        __: [8]\n      }, 8, [\"onClick\"]), _createVNode(_component_el_button, {\n        onClick: $setup.resetForm\n      }, {\n        default: _withCtx(() => _cache[9] || (_cache[9] = [_createTextVNode(\"Reset\")])),\n        _: 1,\n        __: [9]\n      }, 8, [\"onClick\"])])) : _createCommentVNode(\"\", true)]),\n      _: 1\n    }, 8, [\"model\", \"disabled\"])], 64)) : (_openBlock(), _createBlock(_component_el_empty, {\n      key: 2,\n      description: \"Form not found\"\n    }))]),\n    _: 1\n  }), _createVNode(_component_el_dialog, {\n    modelValue: $setup.submissionDialogVisible,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.submissionDialogVisible = $event),\n    title: \"Form Submitted\",\n    width: \"50%\"\n  }, {\n    footer: _withCtx(() => [_createElementVNode(\"span\", _hoisted_11, [_createVNode(_component_el_button, {\n      onClick: _cache[2] || (_cache[2] = $event => $setup.submissionDialogVisible = false)\n    }, {\n      default: _withCtx(() => _cache[10] || (_cache[10] = [_createTextVNode(\"Close\")])),\n      _: 1,\n      __: [10]\n    })])]),\n    default: _withCtx(() => [_cache[11] || (_cache[11] = _createElementVNode(\"h3\", null, \"Form Values:\", -1)), _createElementVNode(\"pre\", null, _toDisplayString(JSON.stringify($setup.formValues, null, 2)), 1)]),\n    _: 1,\n    __: [11]\n  }, 8, [\"modelValue\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","$setup","form","name","_hoisted_3","_createVNode","_component_el_button","onClick","_cache","$event","_ctx","$router","push","type","$props","id","readonly","_createBlock","submitForm","_component_el_card","loading","_hoisted_4","_component_el_skeleton","rows","animated","_Fragment","key","_hoisted_5","description","_hoisted_6","_component_el_divider","_component_el_form","ref","model","formValues","disabled","elements","length","_renderList","element","index","_component_el_form_item","label","prop","required","_component_el_input","placeholder","_component_el_input_number","style","_component_el_select","options","option","_component_el_option","value","_component_el_radio_group","_component_el_radio","_component_el_checkbox_group","_component_el_checkbox","_component_el_date_picker","_component_el_time_picker","_component_el_upload","action","_component_el_slider","_component_el_switch","_hoisted_7","_hoisted_8","helperText","_component_el_tooltip","content","placement","_component_el_icon","_component_QuestionFilled","_hoisted_9","_component_el_empty","_hoisted_10","resetForm","_component_el_dialog","submissionDialogVisible","title","width","footer","_withCtx","_hoisted_11","JSON","stringify"],"sources":["/Users/mdtazbirurrahmanbhuiyan/Experiments/VueJS template buillder/VueJS-template-builder/frontend/src/views/forms/FormView.vue"],"sourcesContent":["<template>\n  <div class=\"form-view\">\n    <div class=\"page-header\">\n      <h1>Form: {{ form?.name }}</h1>\n      <div class=\"header-actions\">\n        <el-button @click=\"$router.push('/forms')\">Back to Forms</el-button>\n        <el-button type=\"primary\" @click=\"$router.push(`/forms/${id}`)\">Edit Form</el-button>\n        <el-button type=\"success\" @click=\"submitForm\" v-if=\"!readonly\">Submit</el-button>\n      </div>\n    </div>\n    \n    <el-card class=\"container form-container\">\n      <template v-if=\"loading\">\n        <div class=\"loading-state\">\n          <el-skeleton :rows=\"6\" animated />\n        </div>\n      </template>\n      \n      <template v-else-if=\"form\">\n        <div class=\"form-info\">\n          <h2>{{ form.name }}</h2>\n          <p v-if=\"form.description\">{{ form.description }}</p>\n        </div>\n        \n        <el-divider />\n        \n        <el-form \n          ref=\"formRef\"\n          :model=\"formValues\"\n          label-position=\"top\"\n          :disabled=\"readonly\"\n        >\n          <template v-if=\"form.elements && form.elements.length > 0\">\n            <div v-for=\"(element, index) in form.elements\" :key=\"element.id || index\" class=\"form-item-wrapper\">\n              <el-form-item \n                :label=\"element.label\"\n                :prop=\"element.name\"\n                :required=\"element.required\"\n              >\n                <!-- Helper Text -->\n                <template #label v-if=\"element.helperText\">\n                  <div>\n                    {{ element.label }}\n                    <el-tooltip :content=\"element.helperText\" placement=\"top\">\n                      <el-icon><QuestionFilled /></el-icon>\n                    </el-tooltip>\n                  </div>\n                </template>\n                \n                <!-- Text Input -->\n                <el-input \n                  v-if=\"element.type === 'text'\"\n                  v-model=\"formValues[element.name]\"\n                  :placeholder=\"element.placeholder\"\n                />\n                \n                <!-- Email Input -->\n                <el-input \n                  v-else-if=\"element.type === 'email'\"\n                  v-model=\"formValues[element.name]\"\n                  :placeholder=\"element.placeholder\"\n                  type=\"email\"\n                />\n                \n                <!-- Password Input -->\n                <el-input \n                  v-else-if=\"element.type === 'password'\"\n                  v-model=\"formValues[element.name]\"\n                  :placeholder=\"element.placeholder\"\n                  type=\"password\"\n                  show-password\n                />\n                \n                <!-- Textarea -->\n                <el-input \n                  v-else-if=\"element.type === 'textarea'\"\n                  v-model=\"formValues[element.name]\"\n                  type=\"textarea\"\n                  :rows=\"3\"\n                  :placeholder=\"element.placeholder\"\n                />\n                \n                <!-- Number Input -->\n                <el-input-number \n                  v-else-if=\"element.type === 'number'\"\n                  v-model=\"formValues[element.name]\"\n                  controls-position=\"right\"\n                  style=\"width: 100%\"\n                />\n                \n                <!-- Select -->\n                <el-select\n                  v-else-if=\"element.type === 'select'\"\n                  v-model=\"formValues[element.name]\"\n                  :placeholder=\"element.placeholder\"\n                  style=\"width: 100%\"\n                >\n                  <el-option\n                    v-for=\"option in element.options\"\n                    :key=\"option.value\"\n                    :label=\"option.label\"\n                    :value=\"option.value\"\n                  />\n                </el-select>\n                \n                <!-- Radio Buttons -->\n                <el-radio-group v-else-if=\"element.type === 'radio'\" v-model=\"formValues[element.name]\">\n                  <el-radio\n                    v-for=\"option in element.options\"\n                    :key=\"option.value\"\n                    :label=\"option.value\"\n                  >\n                    {{ option.label }}\n                  </el-radio>\n                </el-radio-group>\n                \n                <!-- Checkboxes -->\n                <el-checkbox-group v-else-if=\"element.type === 'checkbox'\" v-model=\"formValues[element.name]\">\n                  <el-checkbox\n                    v-for=\"option in element.options\"\n                    :key=\"option.value\"\n                    :label=\"option.value\"\n                  >\n                    {{ option.label }}\n                  </el-checkbox>\n                </el-checkbox-group>\n                \n                <!-- Date Picker -->\n                <el-date-picker\n                  v-else-if=\"element.type === 'date'\"\n                  v-model=\"formValues[element.name]\"\n                  type=\"date\"\n                  :placeholder=\"element.placeholder || 'Select date'\"\n                  style=\"width: 100%\"\n                />\n                \n                <!-- Time Picker -->\n                <el-time-picker\n                  v-else-if=\"element.type === 'time'\"\n                  v-model=\"formValues[element.name]\"\n                  :placeholder=\"element.placeholder || 'Select time'\"\n                  style=\"width: 100%\"\n                />\n                \n                <!-- File Upload -->\n                <el-upload\n                  v-else-if=\"element.type === 'file'\"\n                  action=\"#\"\n                  :auto-upload=\"false\"\n                  v-model:file-list=\"formValues[element.name]\"\n                >\n                  <el-button type=\"primary\">Click to upload</el-button>\n                </el-upload>\n                \n                <!-- Slider -->\n                <el-slider v-else-if=\"element.type === 'slider'\" v-model=\"formValues[element.name]\" />\n                \n                <!-- Switch -->\n                <el-switch v-else-if=\"element.type === 'switch'\" v-model=\"formValues[element.name]\" />\n                \n                <!-- Heading -->\n                <h4 v-else-if=\"element.type === 'heading'\">{{ element.label }}</h4>\n                \n                <!-- Divider -->\n                <el-divider v-else-if=\"element.type === 'divider'\" />\n                \n                <!-- Default case -->\n                <div v-else>{{ element.type }} element</div>\n              </el-form-item>\n            </div>\n          </template>\n          \n          <div v-else class=\"empty-form\">\n            <el-empty description=\"This form has no elements\" />\n          </div>\n          \n          <div class=\"form-actions\" v-if=\"form.elements?.length && !readonly\">\n            <el-button type=\"primary\" @click=\"submitForm\">Submit Form</el-button>\n            <el-button @click=\"resetForm\">Reset</el-button>\n          </div>\n        </el-form>\n      </template>\n      \n      <template v-else>\n        <el-empty description=\"Form not found\" />\n      </template>\n    </el-card>\n    \n    <el-dialog\n      v-model=\"submissionDialogVisible\"\n      title=\"Form Submitted\"\n      width=\"50%\"\n    >\n      <h3>Form Values:</h3>\n      <pre>{{ JSON.stringify(formValues, null, 2) }}</pre>\n      \n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"submissionDialogVisible = false\">Close</el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, computed, onMounted, watch } from 'vue'\nimport { useStore } from 'vuex'\nimport { useRouter } from 'vue-router'\nimport { ElMessage } from 'element-plus'\nimport { QuestionFilled } from '@element-plus/icons-vue'\n\nexport default {\n  name: 'FormView',\n  components: {\n    QuestionFilled\n  },\n  props: {\n    id: {\n      type: String,\n      required: true\n    },\n    readonly: {\n      type: Boolean,\n      default: false\n    }\n  },\n  \n  setup(props) {\n    const store = useStore()\n    // Removed unused router variable\n    const formRef = ref(null)\n    \n    const loading = computed(() => store.getters.isLoading)\n    const form = computed(() => store.getters.currentForm)\n    \n    const formValues = reactive({})\n    const submissionDialogVisible = ref(false)\n    \n    onMounted(async () => {\n      try {\n        await store.dispatch('fetchFormById', props.id)\n      } catch (error) {\n        ElMessage.error('Failed to load form')\n      }\n    })\n    \n    // Initialize form values whenever form changes\n    watch(form, (newForm) => {\n      if (newForm && newForm.elements) {\n        newForm.elements.forEach(element => {\n          if (element.type !== 'divider' && element.type !== 'heading') {\n            formValues[element.name] = element.defaultValue || getDefaultValueForType(element.type)\n          }\n        })\n      }\n    }, { immediate: true })\n    \n    const getDefaultValueForType = (type) => {\n      switch (type) {\n        case 'checkbox': return []\n        case 'number': return 0\n        case 'switch': return false\n        case 'slider': return 0\n        case 'file': return []\n        default: return ''\n      }\n    }\n    \n    const submitForm = () => {\n      if (formRef.value) {\n        formRef.value.validate((valid) => {\n          if (valid) {\n            // In a real app, you'd send this data to the backend\n            ElMessage.success('Form submitted successfully')\n            submissionDialogVisible.value = true\n          } else {\n            ElMessage.error('Please complete all required fields')\n            return false\n          }\n        })\n      }\n    }\n    \n    const resetForm = () => {\n      if (formRef.value) {\n        formRef.value.resetFields()\n      }\n    }\n    \n    return {\n      loading,\n      form,\n      formRef,\n      formValues,\n      submitForm,\n      resetForm,\n      submissionDialogVisible\n    }\n  }\n}\n</script>\n\n<style scoped>\n.form-view {\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.header-actions {\n  display: flex;\n  gap: 1rem;\n}\n\n.form-container {\n  padding: 2rem;\n}\n\n.form-info {\n  margin-bottom: 1.5rem;\n}\n\n.form-item-wrapper {\n  margin-bottom: 1.5rem;\n}\n\n.loading-state {\n  padding: 2rem 0;\n}\n\n.empty-form {\n  padding: 2rem 0;\n  text-align: center;\n}\n\n.form-actions {\n  margin-top: 2rem;\n  display: flex;\n  justify-content: flex-end;\n  gap: 1rem;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}